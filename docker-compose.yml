version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - app-data:/app/data
      - app-checkpoints:/app/checkpoints
      - app-models:/app/models
      - app-uploads:/app/uploads
      - app-results:/app/results
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - OLLAMA_BASE_URL=http://ollama:11434
      - CUDA_VISIBLE_DEVICES=""  # Disable GPU by default
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - medextract-network

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_URL=http://backend:8000
        - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - medextract-network

  # Ollama for local LLM inference (optional)
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    networks:
      - medextract-network
    # Uncomment for GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

volumes:
  ollama-data:
    driver: local
  app-data:
    driver: local
  app-checkpoints:
    driver: local
  app-models:
    driver: local
  app-uploads:
    driver: local
  app-results:
    driver: local

networks:
  medextract-network:
    driver: bridge